{"version":3,"sources":["assets/css/dashboard.module.scss","assets/javascript/calculateRate.js","assets/javascript/calculateGrowthRate.js","assets/images/logo.svg","components/Dashboard/Dashboard.js","components/Dashboard/Rate.js","components/Charts/NewCaseChart.js","components/Charts/TotalCaseChart.js","components/Header&Footer/Header.js","App.js","index.js"],"names":["module","exports","data","totalData","parseFloat","toFixed","array","tempArray","slice","prevData","totalCases","Math","pow","length","Dashboard","props","Card","id","styles","card","border","Body","card_body","className","card_body_items","Typography","variant","paragraph","style","color","newCases","totalRecoveries","totalDeaths","newDeaths","card_body_lastUpdateDate","date","Rate","card_rate","Title","align","type","card_body_rate","calculateGrowthRate","calculateRate","NewCaseChart","width","height","dataKey","stroke","fill","TotalCaseChart","Header","textAlign","marginTop","Image","src","logo","fluid","App","useState","covidData","setCovidData","displayData","setDisplayData","fetchData","a","axios","get","catch","setTimeout","response","currentDate","datetime","Date","previousDate","d","setDate","getDate","dataToDisplay","filter","console","log","useEffect","Container","Row","Col","sm","md","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2ab0bee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"dashboard_card__Sr4Nw\",\"card_rate\":\"dashboard_card_rate__Ts0b6\",\"card_body\":\"dashboard_card_body__UyCKO\",\"card_body_items\":\"dashboard_card_body_items__3oWEa\",\"card_body_lastUpdateDate\":\"dashboard_card_body_lastUpdateDate__3WIDl\",\"card_body_rate\":\"dashboard_card_body_rate__2Uwa_\"};","let calculateRate = (data,totalData) => {\r\n        let rate = parseFloat((data/totalData) * 100 ).toFixed(2);\r\n        return rate;\r\n}\r\n\r\nmodule.exports = calculateRate;","let calculateGrowthRate = (array) =>{\r\n    \r\n    let tempArray =array.slice();\r\n    \r\n    let prevData = tempArray[0].totalCases;\r\n    \r\n    let data = tempArray.slice(-1)[0].totalCases;\r\n\r\n    let growthRate = parseFloat(((Math.pow(data/prevData,(1/array.length)))-1) * 100).toFixed(1);\r\n    return growthRate;\r\n}\r\n\r\nmodule.exports = calculateGrowthRate;","module.exports = __webpack_public_path__ + \"static/media/logo.8e4628f7.svg\";","import React from 'react'\r\nimport { Card } from 'react-bootstrap';\r\nimport { Typography } from '@material-ui/core';\r\nimport styles from '../../assets/css/dashboard.module.scss';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nfunction Dashboard(props) {\r\n    return (\r\n        <>\r\n            {props.data.length > 0 ?\r\n                <Card id={styles.card} border=\"dark\">\r\n                    <Card.Body>\r\n                        <div id={styles.card_body}>\r\n                            <div className={styles.card_body_items}>\r\n                                <div>\r\n                                    <Typography variant=\"h2\" paragraph style={{ color: \"red\" }} >{props.data[1].totalCases}</Typography>\r\n                                    <Typography variant=\"h5\" paragraph>Confirmed</Typography>\r\n                                    <Typography variant=\"h5\" paragraph style={{ color: \"red\" }}><AddIcon />{props.data[1].newCases } <Typography variant=\"caption\"> new cases</Typography></Typography>\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.card_body_items}>\r\n                                <Typography variant=\"h2\" paragraph style={{ color: \"green\" }}>{props.data[1].totalRecoveries}</Typography>\r\n                                <Typography variant=\"h5\" paragraph>Recovered</Typography>\r\n                            </div>\r\n                            <div className={styles.card_body_items}>\r\n                                <div>\r\n                                    <Typography variant=\"h2\" paragraph style={{ color: \"gray\" }} >{props.data[1].totalDeaths}</Typography>\r\n                                    <Typography variant=\"h5\" paragraph>Deaths</Typography>\r\n                                    <Typography variant=\"h5\" paragraph style={{ color: \"gray\" }}><AddIcon />{props.data[1].newDeaths}<Typography variant=\"caption\"> new deaths</Typography></Typography>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div id={styles.card_body_lastUpdateDate}>\r\n                            <Typography style={{ color: \"gray\" }}>Last Updated: {props.data[1].date}</Typography>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n                : ''}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap';\r\nimport calculateRate from '../../assets/javascript/calculateRate.js';\r\nimport calculateGrowthRate from '../../assets/javascript/calculateGrowthRate.js';\r\nimport styles from '../../assets/css/dashboard.module.scss';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction Rate(props) {\r\n    return (\r\n        <Card className={styles.card_rate} id={styles.card} border=\"dark\">\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    <Typography variant=\"h6\" align=\"center\">\r\n                        {props.type === \"DR\" ? \"Fatality Rate\"\r\n                            : (props.type === \"RR\" ? \"Recovery Rate\"\r\n                                : \"Daily Growth Rate\")}\r\n                    </Typography>\r\n                </Card.Title>\r\n                {props.type === \"GR\" ?\r\n                    <Typography variant=\"h2\" id={styles.card_body_rate}>{calculateGrowthRate(props.data)}<Typography variant=\"caption\">%</Typography></Typography>\r\n                    :\r\n                    <Typography variant=\"h2\" id={styles.card_body_rate}>{calculateRate(props.data, props.totalData)}<Typography variant=\"caption\">%</Typography></Typography>\r\n                }\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Rate\r\n","import React from 'react'\r\nimport { BarChart, XAxis, CartesianGrid, Bar, Tooltip,ResponsiveContainer, YAxis } from 'recharts';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Typography } from '@material-ui/core';\r\nimport styles from '../../assets/css/dashboard.module.scss';\r\n\r\nfunction NewCaseChart(props) {\r\n    return (\r\n        <Card id={styles.card} border=\"dark\">\r\n            <Card.Body>\r\n                <Card.Title><Typography variant=\"h6\" align=\"center\">New Cases Per Day</Typography></Card.Title>\r\n                <ResponsiveContainer width=\"98%\" height={300}>\r\n                    <BarChart width={500} height={250} data={props.data}>\r\n                        <XAxis dataKey=\"date\" />\r\n                        <YAxis dataKey=\"newCases\"/>\r\n                        <Tooltip />\r\n                        <CartesianGrid stroke=\"#f5f5f5\" />\r\n                        <Bar dataKey=\"newCases\" fill=\"#8884d8\" />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default NewCaseChart\r\n","import React from 'react'\r\nimport { LineChart, CartesianGrid, XAxis, YAxis, Tooltip, Line, ResponsiveContainer } from 'recharts'\r\nimport { Card } from 'react-bootstrap';\r\nimport styles from '../../assets/css/dashboard.module.scss';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction TotalCaseChart(props) {\r\n    return (\r\n        <Card id={styles.card} border=\"dark\">\r\n            <Card.Body>\r\n                <Card.Title><Typography variant=\"h6\" align=\"center\">Total Cases</Typography></Card.Title>\r\n                <ResponsiveContainer width=\"98%\" height={300}>\r\n                    <LineChart data={props.data}>\r\n                        <XAxis dataKey=\"date\" />\r\n                        <YAxis dataKey=\"totalCases\" />\r\n                        <Tooltip/>\r\n                        <CartesianGrid stroke=\"#f5f5f5\" />\r\n                        <Line type=\"monotone\" dataKey=\"totalCases\" stroke=\"#82ca9d\" />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default TotalCaseChart\r\n","import React from 'react'\r\nimport logo from '../../assets/images/logo.svg'\r\nimport {Image} from 'react-bootstrap';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div style={{textAlign:\"center\", marginTop:\"5px\"}}> \r\n           <Image src={logo} fluid />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport axios from 'axios';\nimport * as datetime from 'date-and-time';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Rate from './components/Dashboard/Rate';\nimport NewCaseChart from './components/Charts/NewCaseChart';\nimport TotalCaseChart from './components/Charts/TotalCaseChart';\nimport Header from './components/Header&Footer/Header';\n\nfunction App() {\n  let [covidData, setCovidData] = useState([]);\n  let [displayData, setDisplayData] = useState([]);\n\n  let fetchData = async () => {\n    try {\n      let response = await axios.get(\"https://data.nepalcorona.info/api/v1/covid/timeline\")\n        .catch(\n          () => {\n            setTimeout(() => { fetchData() }, 2000)\n          }\n        )\n      let { data } = response;\n\n      let currentDate = datetime.format(new Date(), \"YYYY-MM-DD\");//get date for today\n      let previousDate = datetime.format((d => new Date(d.setDate(d.getDate() - 1)))(new Date()), \"YYYY-MM-DD\");//get date for yesterday\n\n      let dataToDisplay = data.filter((a) => { return (a.date === currentDate || a.date === previousDate) });\n\n      setCovidData(data);\n      setDisplayData(dataToDisplay);\n    }\n    catch (error) {\n      console.log(error);\n    }\n\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [1]);\n\n  return (\n    <Container fluid>\n      <Header/>\n      <Row>\n        <Col sm={12}>\n          <Dashboard data={displayData} />\n        </Col>\n      </Row>\n      {displayData.length > 1 ?\n        <>\n          <Row>\n            <Col sm={12} md={4}>\n              <Rate type=\"GR\" data={covidData.filter((a) => {return (a.totalCases > 0)})} />\n            </Col>\n            <Col sm={12} md={4}>\n              <Rate type=\"RR\" data={displayData[1].totalRecoveries || 0} totalData={displayData[1].totalCases || 0} />\n            </Col>\n            <Col sm={12} md={4}>\n              <Rate type=\"DR\" data={displayData[1].totalDeaths || 0} totalData={displayData[1].totalCases || 0} />\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={12}>\n              <NewCaseChart data={covidData.filter((a) => { return a.totalCases > 0 && a.newCases > 10 }).slice(100)} />\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={12}>\n              <TotalCaseChart data={covidData.filter((a,i) => { return (a.totalCases > 0 && (i%5 === 0 || i === covidData.length)) })}/>\n            </Col>\n          </Row>\n        </>\n        : \"\"}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}